<?php

namespace Efrei\Readyo\WebradioBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ScheduleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ScheduleRepository extends EntityRepository
{
	public function filter($showId, $begin, $end, $finished, $live, $limit, $offset, $isPublish=true) {
		
		$qb = $this->createQueryBuilder('schedule');

		if($showId) 
			$qb->andWhere('schedule.show = :showId')
				->setParameter('showId', $showId)
			;


		if($begin) 
			$qb->andWhere('schedule.diffusedAt >= :beginDate')
				->setParameter('beginDate', new \DateTime($begin))
			;

		if($end)
			$qb->andWhere('schedule.diffusedAt <= :endDate')
				->setParameter('endDate', new \DateTime($end))
			;

		if($finished != null) {
			if($finished == 1)
				$qb->andWhere('schedule.finishedAt >= :now')
					->setParameter('now', new \DateTime())
				;

			if($finished == 0)
				$qb->andWhere('schedule.finishedAt <= :now')
					->setParameter('now', new \DateTime())
				;
		}

		if($live != null)
			$qb->andWhere('schedule.isLive = :isLive')
				->setParameter('isLive', $live)
			;
		

		if($isPublish != null)
			$qb->andWhere('schedule.isPublish = :isPublish')
				->setParameter('isPublish', $isPublish)
			;



		$qb
			->orderBy('schedule.diffusedAt', 'ASC')
			->setFirstResult( $offset )
   			->setMaxResults( $limit );
		;


		return $qb
			->getQuery()
			->getResult()
		;
	}

	public function inDiffusion($intervalStart, $intervalStop) {


		$query = $this->createQueryBuilder('p')
			
			->where('p.isPublish = :publish')
			->setParameter('publish', true)
		
			
			->andwhere('p.diffusedAt <= :startDate')
			->setParameter('startDate', new \DateTime('+'.$intervalStart.' minutes'))



			->andwhere('p.finishedAt >= :endDate')
			->setParameter('endDate', new \DateTime('-'.$intervalStop.' minutes'))

			->addOrderBy('p.diffusedAt', "DESC")
		;

		return $query->getQuery()
			->getResult();
	}
}
